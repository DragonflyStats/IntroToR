lsos()
ls()
data(AirPassengers)
AP <- AirPassengers
AP
class(AP)
layout(1:2); plot(aggregate(AP)); boxplot(AP ~ cycle(AP));
aggregate(AP)
readTable('Maine.dat')
read.table('Maine.dat')
read.table('Maine.dat', header = TRUE)
head(read.table('Maine.dat', header = TRUE))
head(read.table('Maine.dat', header = TRUE))$unemploy
read.table('Maine.dat', header = TRUE)$unemploy
unemploy <- read.table('Maine.dat', header = TRUE)$unemploy
Maine.month <- read.table('Maine.dat', header = TRUE)
Maine.month.ts <- ts(Maine.month$unemploy, start = c(1996, 1), freq = 12)
Maine.month.ts
Maine.annual.ts <- aggregate(Maine.month.ts) / 12
layout(1:2); plot(Maine.month.ts, ylab = 'unemployed (%)'); plot(Maine.annual.ts, ylab = 'unemployed (%)');
layout(1:2); plot(aggregate(AP)); boxplot(AP ~ cycle(AP));
layout(1:2); qplot(1:length(aggregate(AP)), aggregate(AP), geom = 'line'); boxplot(AP ~ cycle(AP));
library(ggplot2)
layout(1:2); qplot(1:length(aggregate(AP)), aggregate(AP), geom = 'line'); boxplot(AP ~ cycle(AP));
aggregate(AP)
qplot(1:length(aggregate(AP)), aggregate(AP), geom = 'line');
layout(1:2); qplot(1:length(aggregate(AP)), aggregate(AP), geom = 'line'); boxplot(AP ~ cycle(AP));
qplot(1:length(aggregate(AP)), aggregate(AP), geom = 'line');
plot(AP)
?png
png('test.png', width = 14, height = 10, units = 'cm')
png('test.png', width = 14, height = 10, units = 'cm', res = '300')
png('test.png', width = 14, height = 10, units = 'cm', res = 300)
plot(AP); dev.off();
png('test.png', width = 14, height = 10, units = 'cm', res = 300); plot(AP); dev.off();
png('airline_passengers_plot.png', width = 14, height = 10, units = 'cm', res = 300); plot(AP, ylab = 'Airline Passengers (\'000s)'); dev.off();
q()
y
getwd()
q()
y
lsos()
source('wsexercise.1.5.R', echo = TRUE);
MA.annual.mean
length(MA.annual.mean)
as.vector(MA.annual.mean)
qplot(1:length(MA.month.ts), MA.month.ts, geom = 'line')
qplot(1:length(MA.month.ts), MA.month.ts, geom = 'line') + geom_line(aes(x = 6 + (1:length(MA.annual.mean)) * 12, y = MA.annual.mean))
qplot(1:length(MA.month.ts), MA.month.ts, geom = 'line') + geom_line(aes(x = -6 + (1:length(MA.annual.mean)) * 12, y = MA.annual.mean))
layout(1:2)
plot(MA.month.ts,    ylab = "unemployed (%)")
plot(MA.annual.mean, ylab = "unemployed (%)")

layout(1:2)
plot(MA.month.ts,    ylab = "unemployed (%)")
plot(MA.annual.mean, ylab = "unemployed (%)")
qplot(1:length(MA.month.ts), MA.month.ts, geom = 'line') + geom_line(aes(x = -6 + (1:length(MA.annual.mean)) * 12, y = MA.annual.mean))
source('wsexercise.1.5.R', echo = TRUE);
source('wsexercise.1.5.R', echo = TRUE);
source('wsexercise.1.6.R', echo = TRUE);
MA.02
plot(MA.02)
MA.08
8/12
7/12
q()
y
source('wsexercise.1.6.R', echo = TRUE);
?window
source('wsexercise.1.6.R', echo = TRUE);
Feb.ratio
Aug.ratio
lsos()
rm(list = ls())
source('wsexercise.1.6.R', echo = TRUE);
lsos()
Aug.ratio
lsos()
lsos()
lsos()
source('wsexercise.2.1.R', echo = TRUE)
head(CBE)
source('wsexercise.2.1.R', echo = TRUE)
CBE$elec
CBE[, 3]
source('wsexercise.2.2.R', echo = TRUE)
source('wsexercise.2.3.R', echo = TRUE)
source('wsexercise.2.3.R', echo = TRUE)
source('wsexercise.2.3.R', echo = TRUE)
AP.elec.ts
plot(AP.elec.ts)
melt(AP.elec.ts)
library(reshape2)
melt(AP.elec.ts)
head(melt(AP.elec.ts))
AP.elec.ts
str(AP.elec.ts)
source('wsexercise.2.3.R', echo = TRUE)
library(xts)
as.xts(AP.elec.ts)
plot(as.xts(AP.elec.ts))
melt(as.xts(AP.elec.ts))
as.xts(AP.elec.ts)
melt(as.xts(AP.elec.ts))
as.data.frame(AP.elec.ts))
as.data.frame(AP.elec.ts)
as.data.frame(as.xts(AP.elec.ts))
str(as.data.frame(as.xts(AP.elec.ts)))
melt(as.data.frame(as.xts(AP.elec.ts)))
melt(AP.elec.ts)
head(melt(AP.elec.ts))
qplot(Var1, value, data = melt(AP.elec.ts), geom = 'line', colour = Var2)
qplot(Var1, value, data = melt(AP.elec.ts), geom = 'line', colour = Var2, ylim = c(0, 0))
qplot(Var1, value, data = melt(AP.elec.ts), geom = 'line', colour = Var2)
qplot(Var1, value, data = melt(AP.elec.ts), geom = 'line', colour = Var2, ylim = c(0, 2500))
mean(AP.elec.ts)
AP.elec.ts
colMeans(AP.elec.ts)
AP.elec.ts / colMeans(AP.elec.ts)
melt(AP.elec.ts / colMeans(AP.elec.ts))
qplot(Var1, value, data = melt(AP.elec.ts / colMeans(AP.elec.ts)), geom = 'line', colour = Var2)
qplot(Var1, value, data = melt(AP.elec.ts - colMeans(AP.elec.ts)), geom = 'line', colour = Var2)
colMeans
colsd
colSD
?scale
scale(AP.elec.ts)
qplot(Var1, value, data = melt(scale(AP.elec.ts)), geom = 'line', colour = Var2)
qplot(Var1, value, data = melt(scale(AP.elec.ts)), geom = 'line', colour = Var2, ylim = c(-3, 3))
cor(AP.elec.ts)
source('wsexercise.1.5.R')
source('wsexercise.1.5.R')
source('wsexercise.1.5.R')
source('wsexercise.1.5.R')
source('wsexercise.1.5.R')
source('wsexercise.2.3.R')
source('wsexercise.2.3.R')
source('wsexercise.2.3.R', echo = TRUE)
cor(AP.elec.ts)
source('wsexercise.2.4.R', echo = TRUE)
acf(AP.elec.ts)
acf(AP.elec.ts)
acf(as.xts(AP.elec.ts))
as.xts(AP.elec.ts)
str(as.xts(AP.elec.ts))
plot(as.xts(AP.elec.ts))
plot(xts(AP.elec.ts))
plot(as.xts(AP.elec.ts))
index(as.xts(AP.elec.ts))
str(index(as.xts(AP.elec.ts)))
?yearmon
lsos()
q()
y
?acf
lsos()
acf(AP.ts)
rm(MA.02, AP, MA.08, CBE)
lsos()
rm(MA.month)
lsos()
rm(AirPassengers)
lsos()
acf(AP.ts)
acf(AP.ts, type = 'partial')
acf(AP.ts, type = 'cov')
?acf
acf(AP.ts, type = 'cor')
lsos()
pacf(AP.ts)
acf(AP.ts)
str(acf(AP.ts))
str(pacf(AP.ts))
str(acf(AP.ts, plot = FALSE))
?acf
acf(AP.ts)
acf(AP.ts, demean = TRUE)
acf(AP.ts, demean = FALSE)
?acf
AP.decomp.ts <- decompose(AP.ts)$random
str(AP.decomp.ts)
acf(AP.decomp.ts)
acf(AP.decomp.ts[!is.na(AP.decomp.ts)])
pacf(AP.decomp.ts[!is.na(AP.decomp.ts)])
q()
y
source('setup_data.R', echo = TRUE)
lsos()
rnorm(100, 0, 1)
c(1, rnorm(99, 0, 1))
ts(c(1, rnorm(99, 0, 1)))
plot(ts(c(1, rnorm(99, 0, 1))))
set.seed(42); plot(ts(c(1, rnorm(99, 0, 1))))
set.seed(42); plot(ts(c(1, rnorm(99, 0, 1))))
set.seed(42); acf(ts(c(1, rnorm(99, 0, 1))))
set.seed(42); plot(ts(cumsum(c(1, rnorm(99, 0, 1)))))
set.seed(42); acf(ts(cumsum(c(1, rnorm(99, 0, 1)))))
set.seed(42); pacf(ts(cumsum(c(1, rnorm(99, 0, 1)))))
set.seed(42); pacf(ts(cumsum(c(1, rnorm(99, 0, 1)) + 0.1)))
set.seed(42); plot(ts(cumsum(c(1, rnorm(99, 0, 1)) + 0.1)))
set.seed(42); plot(ts(cumsum(c(1, rnorm(99, 0, 1)) + 0.01)))
set.seed(42); plot(ts(cumsum(c(1, rnorm(99, 0, 1)) + 0)))
source('wsexercise.6.1.R', echo = TRUE)
source('wsexercise.6.1.R', echo = TRUE)
source('wsexercise.6.1.R', echo = TRUE)
source('wsexercise.6.1.R', echo = TRUE)
source('wsexercise.6.2.R', echo = TRUE)
source('wsexercise.6.2.R', echo = TRUE)
source('wsexercise.6.2.R', echo = TRUE)
lsos()
randomwalk.ts
whitenoise.ts
mean(whitenoise.ts)
mean(whitenoise.ts[2:100])
sd(whitenoise.ts[2:100])
sd(whitenoise.ts[1:100])
q()
y
lsos()
?arima.sim
arima.sim(n = 10, list(ar = -0.6, ma = 0.5))
?arima.sim
arima.sim(n = 100, list(ar = -0.6, ma = 0.5))
plot(arima.sim(n = 100, list(ar = -0.6, ma = 0.5)))
set.seed(42); arima.sim(n = 1000, list(ar = -0.6, ma = 0.5))
set.seed(42); plot(arima.sim(n = 1000, list(ar = -0.6, ma = 0.5)))
set.seed(42); plot(acf(n = 1000, list(ar = -0.6, ma = 0.5)))
set.seed(42); acf(n = 1000, list(ar = -0.6, ma = 0.5))
set.seed(42); acf(arima.sim(n = 1000, list(ar = -0.6, ma = 0.5))
set.seed(42); acf(arima.sim(n = 1000, list(ar = -0.6, ma = 0.5)))
?arima.sim
set.seed(42); str(arima.sim(n = 1000, list(ar = -0.6, ma = 0.5)))
?arima.sim
?arima.sim
getSymbol
??getSymbol
library(quantmod)
getSymbol('SPY')
getSymbols('SPY')
lsos()
SPY
head(SPY)
str(SPY)
data.table(SPY)
data.frame(SPY)
head(data.frame(SPY))
?getSymbols
getSymbols.yahoo
head(getSymbols.yahoo)
getSymbols('SPY', from = '1990-01-01')
head(SPY)
SPY.df <- data.frame(SPY)
head(SPY.df)
write.csv(SPY.df, file = 'spy.dat')
lsos()
rm(SPY, SPY.df)
lsos()
rm(plot.df)
lsos()
lsos()
q()
y
source('wsexercise.4.4.R')
source('wsexercise.4.4.R', echo = TRUE)
print(AP.ts.acf)
plot(AP.ts.acf)
plot(AP.ts.decomp.random.acf)
layout(1:2); plot(AP.ts.acf); plot(AP.ts.decomp.random.acf);
layout(1:2); plot(AP.ts.acf, ylim = c(-1, 1)); plot(AP.ts.decomp.random.acf);
layout(1:2); plot(AP.ts.acf, ylim = c(-1, 1)); plot(AP.ts.decomp.random.acf, ylim = c(-1, 1));
?pacf
pacf(AP.ts, ylim = c(-1, 1))
layout(1:2); pacf(AP.ts, ylim = c(-1, 1)); pacf(AP.ts.decomp.random, ylim = c(-1, 1))
source('wsexercise.4.4.R', echo = TRUE)
lsos()
rm(plot1)
rm(plot2)
lsos()
rm(list = ls())
source('wsexercise.4.1.R', echo = TRUE)
source('wsexercise.4.2.R', echo = TRUE)
source('wsexercise.4.3.R', echo = TRUE)
source('wsexercise.4.3.R', echo = TRUE)
source('wsexercise.4.4.R', echo = TRUE)
lsos()
source('wsexercise.5.1.R')
getwd()
source('wsexercise.5.1.R')
AA.df
source('wsexercise.5.1.R', echo = TRUE)
ts.plot(App.ts, Act.ts)
ts.plot(App.ts, Act.ts, lty = c(1, 3))
ts.plot(App.ts, Act.ts, lty = c(1, 3), ylim = c(0, 1600))
ts.plot(App.ts, Act.ts, lty = c(1, 3), ylim = c(0, 16000))
source('wsexercise.5.2.R')
source('wsexercise.5.3.R')
source('wsexercise.5.3.R')
Act.rnd.ts
App.rnd.ts
ts.union(App.rnd.ts, Act.rnd.ts)
acf(ts.union(App.rnd.ts, Act.rnd.ts))
app.ran <- decompose(App.ts)$random
app.ran.ts <- window (app.ran, start = c(1996, 3) )
act.ran <- decompose (Act.ts)$random
act.ran.ts <- window (act.ran, start = c(1996, 3) )
acf (ts.union(app.ran.ts, act.ran.ts))
ccf (app.ran.ts, act.ran.ts)
rm(list = ls())
source('wsexercise.5.3.R')
source('wsexercise.5.1.R')
source('wsexercise.5.2.R')
source('wsexercise.5.3.R')
?acf
AppAct.acf <- acf(ts.union(App.rnd.ts, Act.rnd.ts), plot = FALSE);
AppAct.acf <- acf(ts.union(App.rnd.ts, Act.rnd.ts)(
AppAct.acf <- acf(ts.union(App.rnd.ts, Act.rnd.ts))
ts.union(App.rnd.ts, Act.rnd.ts)
str(ts.union(App.rnd.ts, Act.rnd.ts))
ts.union(App.rnd.ts, Act.rnd.ts)
acf(ts.union(App.rnd.ts, Act.rnd.ts))
acf(ts.union(App.rnd.ts, Act.rnd.ts), na.action = na.pass)
source('wsexercise.5.3.R')
lsos()
AppAct.ccf
plot(AppAct.ccf)
layout(1:2);
plot(AppAct.acf);
plot(AppAct.ccf);
layout(1:2); plot(AppAct.acf); plot(AppAct.ccf);
layout(1:3); plot(AppAct.acf); plot(AppAct.ccf);
 plot1 <- plot(AppAct.acf); plot2 <- plot(AppAct.ccf); gridArrange(plot1, plot2);
 plot1 <- plot(AppAct.acf); plot2 <- plot(AppAct.ccf); grid.arrange(plot1, plot2);
source('wsexercise.5.3.R')
plot(AppAct.acf)
lsos()
source('wsexercise.5.3.R')
plot(AppAct.rnd.ts.acf)
plot(AppAct.rnd.ts.ccf)
plot(AppAct.rnd.ts.acf)
source('wsexercise.5.4.R', echo = TRUE);
motororg.df
source('wsexercise.5.4.R', echo = TRUE);
source('wsexercise.5.4.R', echo = TRUE);
source('wsexercise.5.5.R', echo = TRUE);
motororg.df$complaints
Comp.hw1
HoltWinters
?HoltWinters
source('wsexercise.5.5.R', echo = TRUE);
source('wsexercise.5.6.R', echo = TRUE);
source('wsexercise.5.6.R', echo = TRUE);
HoltWinters(motororg.df$complaints, beta = 0, gamma = 0)
HoltWinters(ts(motororg.df$complaints, start = c(1996, 1), freq = 1), beta = 0, gamma = 0)
?HoltWinters
HoltWinters(motororg.df$complaints, beta = 0, gamma = 0)
attach(motororg.df)
HoltWinters(complaints, beta = 0, gamma = 0)
detach(motororg.df)
lsos()
rm(plot1); rm(plot2);
?HoltWinters
ts(motororg.df$complaints, start = c(1996, 1))
ts(motororg.df$complaints, start = c(1996, 1), frequency = 12)
ts(motororg.df$complaints, start = c(1996, 1))
ts(motororg.df$complaints, start = c(1996, 1), end = c(1999, 12))
HoltWinters(Complaints.ts, beta = 0, gamma = 0)
HoltWinters(motororg.df$complaints, beta = 0, gamma = 0)
HoltWinters(motororg.df$complaints, beta = 0, gamma = FALSE)
HoltWinters(motororg.df$complaints, beta = FALSE, gamma = FALSE)
source('wsexercise.5.5.R', echo = TRUE);
source('wsexercise.5.6.R', echo = TRUE);
layout(1:2); plot(Comp.hw1); plot(Comp.hw2);
HoltWinters(Complaints.ts, beta = FALSE, gamma = FALSE)
source('wsexercise.5.6.R', echo = TRUE);
source('wsexercise.5.6.R', echo = TRUE);
source('wsexercise.5.5.R', echo = TRUE);
source('wsexercise.5.6.R', echo = TRUE);
source('wsexercise.5.7.R')
source('wsexercise.5.7.R')
plot(AP.ts.add.hw)
plot(AP.ts.mult.hw)
source('wsexercise.5.8.R')
q()
y
lsos()
source('wsexercise.6.3.R', echo = TRUE)
source('wsexercise.6.3.R', echo = TRUE)
source('wsexercise.6.3.R', echo = TRUE)
source('wsexercise.6.3.R', echo = TRUE)
source('wsexercise.6.3.R', echo = TRUE)
source('wsexercise.6.3.R', echo = TRUE)
source('wsexercise.6.3.R', echo = TRUE)
SPY.df
source('wsexercise.6.3.R', echo = TRUE)
SPY.df
head(SPY.df)
ts(SPY.df$SPY.Adjusted)
plot(ts(SPY.df$SPY.Adjusted))
?ar.sim
?ar
arima.sim
?arima.sim
?arima.sim
arima.sim(list(ar = 0.5), n = 100)
arima.sim(list(ar = 0.5), n = 100, start.innov = 1)
?start.innov
?arima.sim
arima.sim(list(ar = 0.5), n = 100, start.innov = 1, n.start = 1)
plot(arima.sim(list(ar = 0.5), n = 100, start.innov = 1, n.start = 1))
source('wsexercise.6.4.R', echo = TRUE)
source('wsexercise.6.5.R', echo = TRUE)
source('wsexercise.6.5.R', echo = TRUE)
source('wsexercise.6.5.R', echo = TRUE)
source('wsexercise.6.6.R', echo = TRUE)
?arima.sim
source('wsexercise.6.4.R', echo = TRUE)
source('wsexercise.6.5.R', echo = TRUE)
source('wsexercise.6.6.R', echo = TRUE)
arima.sim(list(ar = c(0.5, 0.5)))
arima.sim(list(ar = c(0.5, 0.5)), n = 100)
?arima.sim
source('wsexercise.6.6.R', echo = TRUE)
source('wsexercise.6.4.R', echo = TRUE)
source('wsexercise.6.5.R', echo = TRUE)
ar1.ts
?ar
ar(ar1.ts)
predict(ar(ar1.ts))
?predict
predict(ar(ar1.ts))
ar(ar1.ts)
plot(ar(ar1.ts))
print(ar(ar1.ts))
q()
y
source('wsexercise.6.3.R', echo = TRUE)
?ar
ar(ar1.ts)
 source('wsexercise.6.4.R', echo = TRUE)
 source('wsexercise.6.5.R', echo = TRUE)
 source('wsexercise.6.6.R', echo = TRUE)
ar1.ts
ar(ar1.ts)
ar(ar2.ts)
ar2a.ts
ar(ar2a.ts)
 source('wsexercise.6.7.R', echo = TRUE)
ar1.fit
 source('wsexercise.6.7.R', echo = TRUE)
 source('wsexercise.6.8.R', echo = TRUE)
 source('wsexercise.6.8.R', echo = TRUE)
 source('wsexercise.6.8.R', echo = TRUE)
 source('wsexercise.6.8.R', echo = TRUE)
 source('wsexercise.6.8.R', echo = TRUE)
 source('wsexercise.6.9.R', echo = TRUE)
ma1.ta
ma1.ts
rbind(ma1.ts, ma2a.ts)
plot(rbind(ma1.ts, ma2a.ts))
plot(bbind(ma1.ts, ma2a.ts))
plot(cbind(ma1.ts, ma2a.ts))
 source('wsexercise.6.9.R', echo = TRUE)
 source('wsexercise.6.10.R', echo = TRUE)
plot(cbind(ma1.ts, ma2a.ts, ma2b.ts))
?arima
arima(ma1.ts)
arima(ma2a.ts)
arima(ma2b.ts)
arima(ma2b.ts, order = c(0, 0, 1))
arima(ma1.ts, order = c(0, 0, 1))
arima(ma2a.ts, order = c(0, 0, 2))
arima(ma2a.ts, order = c(0, 0, 1))
arima(ma2a.ts, order = c(1, 0, 1))


 source('wsexercise.6.11.R', echo = TRUE)
q()
y
source('wsexercise.7.1.R', echo = TRUE)
arma11.ts
plot(arma.ts)
plot(arma11.ts)
?arma
arma
??arma
arma.ts
plot(pacf(arma.ts))
arma.ts
arma11.ts
pacf(arma11.ts)
source('wsexercise.7.1.R', echo = TRUE)
source('wsexercise.7.1.R', echo = TRUE)
source('wsexercise.7.2.R', echo = TRUE)
source('wsexercise.7.3.R', echo = TRUE)
q()
y
source('wsexercise.5.1.R', echo = TRUE)
source('wsexercise.5.1.R', echo = TRUE)
source('wsexercise.5.2.R', echo = TRUE)
source('wsexercise.5.3.R', echo = TRUE)
plot(AppAct.rnd.ts.acf);
source('wsexercise.5.4.R', echo = TRUE)
source('wsexercise.5.5.R', echo = TRUE)
str(Complaints.hw1)
source('wsexercise.5.6.R', echo = TRUE)
source('wsexercise.5.7.R', echo = TRUE)
plot(AP.ts.add.hw)
plot(AP.ts.add.hw)
plot(AP.ts.mult.hw)
source('wsexercise.5.8.R', echo = TRUE)
source('wsexercise.6.1.R', echo = TRUE)
source('wsexercise.6.1.R', echo = TRUE)
source('wsexercise.6.1.R', echo = TRUE)
source('wsexercise.6.1.R', echo = TRUE)
source('wsexercise.6.4.R', echo = TRUE)
source('wsexercise.6.5.R', echo = TRUE);
source('wsexercise.6.8.R', echo = TRUE);
q()
y
